services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${GREENLIGHT_DB_DATABASE}
      POSTGRES_USER: ${GREENLIGHT_DB_USERNAME}
      POSTGRES_PASSWORD: ${GREENLIGHT_DB_PASSWORD}
    expose:
      - 5432
    volumes:
      - psql_volume:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${GREENLIGHT_DB_USERNAME} -d ${GREENLIGHT_DB_DATABASE}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${GREENLIGHT_DB_USERNAME}:${GREENLIGHT_DB_PASSWORD}@db:5432/${GREENLIGHT_DB_DATABASE}?sslmode=disable&search_path=${GREENLIGHT_DB_SCHEMA}",
        "up",
      ]
    depends_on:
      db:
        condition: service_healthy
  api:
    build: .
    volumes:
      - .:/app
    ports:
      - "4000:4000"
    depends_on:
      - db
    env_file:
      - .env
    command: make watch/api
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .git/
            - .gitignore

volumes:
  psql_volume:
